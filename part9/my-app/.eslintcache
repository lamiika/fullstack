[{"C:\\Users\\Miika\\Desktop\\kurssit\\fullstack\\part9\\my-app\\src\\index.tsx":"1","C:\\Users\\Miika\\Desktop\\kurssit\\fullstack\\part9\\my-app\\src\\App.tsx":"2"},{"size":1648,"mtime":1606479966906,"results":"3","hashOfConfig":"4"},{"size":556,"mtime":499162500000,"results":"5","hashOfConfig":"6"},{"filePath":"7","messages":"8","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"9"},"7g1fo7",{"filePath":"10","messages":"11","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"hn5eax","C:\\Users\\Miika\\Desktop\\kurssit\\fullstack\\part9\\my-app\\src\\index.tsx",["12"],"import React from 'react';\nimport ReactDOM from 'react-dom';\n\ninterface WelcomeProps {\n  name: string;\n}\n\ninterface CoursePartBase {\n  name: string;\n  exerciseCount: number;\n}\n\ninterface CoursePartOne extends CoursePartBase {\n  name: \"Fundamentals\";\n  description: string;\n}\n\ninterface CoursePartTwo extends CoursePartBase {\n  name: \"Using props to pass data\";\n  groupProjectCount: number;\n}\n\ninterface CoursePartThree extends CoursePartBase {\n  name: \"Deeper type usage\";\n  description: string;\n  exerciseSubmissionLink: string;\n}\n\ntype CoursePart = CoursePartOne | CoursePartTwo | CoursePartThree;\n\nconst courseParts: CoursePart[] = [\n  {\n    name: \"Fundamentals\",\n    exerciseCount: 10,\n    description: \"This is an awesome course part\"\n  },\n  {\n    name: \"Using props to pass data\",\n    exerciseCount: 7,\n    groupProjectCount: 3\n  },\n  {\n    name: \"Deeper type usage\",\n    exerciseCount: 14,\n    description: \"Confusing description\",\n    exerciseSubmissionLink: \"https://fake-exercise-submit.made-up-url.dev\"\n  }\n];\n\ncourseParts.forEach(part => {\n  switch (part.name) {\n    case \"Fundamentals\":\n      break;\n    case \"Using props to pass data\":\n      break;\n    case \"Deeper type usage\":\n      break;\n    default:\n      return assertNever(part);\n  }\n});\n\n/**\n * Helper function for exhaustive type checking\n */\nconst assertNever = (value: never): never => {\n  throw new Error(\n    `Unhandled discriminated union member: ${JSON.stringify(value)}`\n  );\n};\n\nconst Welcome: React.FC<{ name: string }> = ({ name }) => (\n  <h1>Hello, {name}</h1>\n);\n\nconst element = <Welcome name=\"Sara\" />;\nReactDOM.render(element, document.getElementById('root'));","C:\\Users\\Miika\\Desktop\\kurssit\\fullstack\\part9\\my-app\\src\\App.tsx",["13"],{"ruleId":"14","severity":1,"message":"15","line":4,"column":11,"nodeType":"16","messageId":"17","endLine":4,"endColumn":23},{"ruleId":"18","severity":1,"message":"19","line":5,"column":1,"nodeType":"20","messageId":"21","endLine":5,"endColumn":15},"@typescript-eslint/no-unused-vars","'WelcomeProps' is defined but never used.","Identifier","unusedVar","@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","FunctionDeclaration","missingReturnType"]